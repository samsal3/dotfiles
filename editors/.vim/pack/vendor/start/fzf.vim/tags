!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Ruby	mixin	/how the class or module is mixed in (mixin:HOW:MODULE)/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Perl	c,constant	/constants/
!_TAG_KIND_DESCRIPTION!Perl	f,format	/formats/
!_TAG_KIND_DESCRIPTION!Perl	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Perl	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Perl	s,subroutine	/subroutines/
!_TAG_KIND_DESCRIPTION!Ruby	A,accessor	/accessors/
!_TAG_KIND_DESCRIPTION!Ruby	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!Ruby	L,library	/libraries/
!_TAG_KIND_DESCRIPTION!Ruby	S,singletonMethod	/singleton methods/
!_TAG_KIND_DESCRIPTION!Ruby	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Ruby	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Ruby	f,method	/methods/
!_TAG_KIND_DESCRIPTION!Ruby	m,module	/modules/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	k,class	/vim9script classes/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Perl	0.0	/current.age/
!_TAG_PARSER_VERSION!Ruby	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	1.1	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/samsal/developer/dotfiles/editors/.vim/pack/vendor/start/fzf.vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	//
!_TAG_ROLE_DESCRIPTION!Ruby!library	loaded	/loaded by "load" method/
!_TAG_ROLE_DESCRIPTION!Ruby!library	required	/loaded by "require" method/
!_TAG_ROLE_DESCRIPTION!Ruby!library	requiredRel	/loaded by "require_relative" method/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
<Plug>(-fzf-complete-finish)	autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<plug>(-fzf-/)	autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
Advanced customization	README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
Command-level fzf options	README.md	/^#### Command-level fzf options$/;"	t	subsection:fzf :heart: vim""Customization""Configuration options for fzf.vim
Command-level options	README.md	/^#### Command-level options$/;"	t	subsection:fzf :heart: vim""Customization""Configuration options for fzf.vim
Commands	README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Completion functions	README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
Configuration options for fzf.vim	README.md	/^### Configuration options for fzf.vim$/;"	S	section:fzf :heart: vim""Customization
Configuration options of the base plugin	README.md	/^### Configuration options of the base plugin$/;"	S	section:fzf :heart: vim""Customization
Custom completion	README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom statusline	README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Customization	README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Dependencies	README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Example: Customizing `Files` command	README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Hide statusline	README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Installation	README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
License	README.md	/^License$/;"	s	chapter:fzf :heart: vim
List type to handle multiple selections	README.md	/^#### List type to handle multiple selections$/;"	t	subsection:fzf :heart: vim""Customization""Configuration options for fzf.vim
Mappings	README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Preview window	README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Configuration options for fzf.vim
Rationale	README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Reducer example	README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
Status line of terminal buffer	README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
Using [vim-plug](https://github.com/junegunn/vim-plug)	README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Vim functions	README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Why you should use fzf on Vim	README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
[Tuple, the premier screen sharing app for developers](https://tuple.app/fzf.vim)	README.md	/^### [Tuple, the premier screen sharing app for developers](https:\/\/tuple.app\/fzf.vim)$/;"	S
_fzf_statusline	plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
fzf :heart: vim	README.md	/^fzf :heart: vim$/;"	c
fzf#complete	plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#vim#_buflisted_sorted	autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...) range$/;"	f
fzf#vim#buffer_lines	autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#changes	autoload/fzf/vim.vim	/^function! fzf#vim#changes(...)$/;"	f
fzf#vim#colors	autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	autoload/fzf/vim.vim	/^function! fzf#vim#commits(...) range$/;"	f
fzf#vim#complete	autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, ...)$/;"	f
fzf#vim#grep2	autoload/fzf/vim.vim	/^function! fzf#vim#grep2(command_prefix, query, ...)$/;"	f
fzf#vim#helptags	autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#ipc#restart	autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#restart()$/;"	f
fzf#vim#ipc#start	autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#start(Callback)$/;"	f
fzf#vim#ipc#stop	autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#stop()$/;"	f
fzf#vim#jumps	autoload/fzf/vim.vim	/^function! fzf#vim#jumps(...)$/;"	f
fzf#vim#lines	autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#listproc#location	autoload/fzf/vim/listproc.vim	/^function! fzf#vim#listproc#location(list)$/;"	f
fzf#vim#listproc#quickfix	autoload/fzf/vim/listproc.vim	/^function! fzf#vim#listproc#quickfix(list)$/;"	f
fzf#vim#locate	autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	autoload/fzf/vim.vim	/^function! fzf#vim#marks(...) abort$/;"	f
fzf#vim#search_history	autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
g:__fzf_command	autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:fzf#vim#buffers	plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_ipc	autoload/fzf/vim/ipc.vim	/^    let g:fzf_ipc.job = job_start($/;"	v
g:fzf_ipc	autoload/fzf/vim/ipc.vim	/^    let g:fzf_ipc.job = jobstart($/;"	v
g:fzf_ipc	autoload/fzf/vim/ipc.vim	/^  let g:fzf_ipc = { 'fifo': tempname(), 'callback': a:Callback }$/;"	v
g:loaded_fzf_vim	plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
opts.sink	autoload/fzf/vim.vim	/^  function! opts.sink(lines) closure$/;"	f	function:fzf#vim#grep
opts.sink	autoload/fzf/vim.vim	/^  function! opts.sink(lines) closure$/;"	f	function:fzf#vim#grep2
s:TYPE	autoload/fzf/vim.vim	/^let s:TYPE = {'bool': type(0), 'dict': type({}), 'funcref': type(function('call')), 'string': ty/;"	v
s:action_for	autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:ag_handler	autoload/fzf/vim.vim	/^function! s:ag_handler(name, lines)$/;"	f
s:ag_to_qf	autoload/fzf/vim.vim	/^function! s:ag_to_qf(line)$/;"	f
s:align_lists	autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:ansi	autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:bash	autoload/fzf/vim.vim	/^function! s:bash()$/;"	f
s:bin	autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:btags_sink	autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buffer_line_handler	autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buflisted	autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufopen	autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:changes_sink	autoload/fzf/vim.vim	/^function! s:changes_sink(lines)$/;"	f
s:check_requirements	autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:checked	autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:chomp	autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:cmd_history_sink	autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:colors_exit	autoload/fzf/vim.vim	/^function! s:colors_exit(code)$/;"	f
s:command_sink	autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commits	autoload/fzf/vim.vim	/^function! s:commits(range, buffer_local, args)$/;"	f
s:commits_sink	autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:complete_insert	autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:conf	autoload/fzf/vim.vim	/^function! s:conf(name, default)$/;"	f
s:conf	plugin/fzf.vim	/^function! s:conf(name, default)$/;"	f
s:cpo_save	autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:csi	autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:default_action	autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:defs	plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:escape	autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape_for_bash	autoload/fzf/vim.vim	/^function! s:escape_for_bash(path)$/;"	f
s:eval	autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:excmds	autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:execute_silent	autoload/fzf/vim.vim	/^function! s:execute_silent(cmd)$/;"	f
s:extend	autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend_opts	autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:file_options	autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:fill_quickfix	autoload/fzf/vim.vim	/^function! s:fill_quickfix(name, list)$/;"	f
s:find_open_window	autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:first_line	autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:fmt_excmd	autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:format_change	autoload/fzf/vim.vim	/^function! s:format_change(bufnr, offset, item)$/;"	f
s:format_change_offset	autoload/fzf/vim.vim	/^function! s:format_change_offset(current, index, cursor)$/;"	f
s:format_cmd	autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_mark	autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_win	autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:function	autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:fzf	autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_restore_colors	plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_vim_term	plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:get_color	autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_git_root	autoload/fzf/vim.vim	/^function! s:get_git_root(dir)$/;"	f
s:git_version_requirement	autoload/fzf/vim.vim	/^function! s:git_version_requirement(...)$/;"	f
s:given_range	autoload/fzf/vim.vim	/^function! s:given_range(line1, line2)$/;"	f
s:grep_multi_line	autoload/fzf/vim.vim	/^function! s:grep_multi_line(opts)$/;"	f
s:helptag_sink	autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:highlight_keys	autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:history	plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history_sink	autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:inject_snippet	autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:is_win	autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_wsl_bash	autoload/fzf/vim.vim	/^let s:is_wsl_bash = s:is_win && (exepath('bash') =~? 'Windows[\/\\\\]system32[\/\\\\]bash.exe$')$/;"	v
s:jump	autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jump_format	autoload/fzf/vim.vim	/^function! s:jump_format(line)$/;"	f
s:jump_sink	autoload/fzf/vim.vim	/^function! s:jump_sink(lines)$/;"	f
s:key_sink	autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:layout_keys	autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:line_handler	autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:mark_sink	autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:merge_opts	autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:min_version	autoload/fzf/vim.vim	/^let s:min_version = '0.56.0'$/;"	v
s:open	autoload/fzf/vim.vim	/^function! s:open(target)$/;"	f
s:pluck	autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:prepend_opts	autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:reduce_line	autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:remove_layout	autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:reverse_list	autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:rstrip	autoload/fzf/vim.vim	/^function! s:rstrip(str)$/;"	f
s:search_history_sink	autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:shortpath	autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:sort_buffers	autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:strip	autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:tab	autoload/fzf/vim.vim	/^let s:tab = "\\t"$/;"	v
s:tags_sink	autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:version_requirement	autoload/fzf/vim.vim	/^function! s:version_requirement(val, min)$/;"	f
s:warn	autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	autoload/fzf/vim/ipc.vim	/^function! s:warn(message)$/;"	f
s:warned	autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:wide	autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:windows_sink	autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winpath	autoload/fzf/vim.vim	/^function! s:winpath(path)$/;"	f
s:winpath	autoload/fzf/vim.vim	/^let s:winpath = {}$/;"	v
s:wrap	autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:yank_to_register	autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
wrapped.newsink	autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f	function:fzf#vim#gitfiles
